local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "BladeBall SeriusHub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Loading BladeBall Script",
   LoadingSubtitle = "by Smuss",
   Theme = "Bloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = True, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "7YquTw3d", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "BladeBall Key",
      Subtitle = "Link In Discord Server",
      Note = "Join Discord Server For Key https://discord.gg/7YquTw3d", -- Use this to tell the user how to get a key
      FileName = "examplehubkey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/p6LHuJWA"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè†Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

local Toggle = MainTab:CreateToggle({
   Name = "Auto Parry !!IF U ENABLED THIS U CANT DISABLE",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
local RunService = game:GetService("RunService") or game:FindFirstDescendant("RunService") local Players = game:GetService("Players") or game:FindFirstDescendant("Players") local VirtualInputManager = game:GetService("VirtualInputManager") or game:FindFirstDescendant("VirtualInputManager")  local Player = Players.LocalPlayer  local Cooldown = tick() local IsParried = false local Connection = nil  local function GetBall() for _, Ball in ipairs(workspace.Balls:GetChildren()) do if Ball:GetAttribute("realBall") then return Ball end end end  local function ResetConnection() if Connection then Connection:Disconnect() Connection = nil end end  workspace.Balls.ChildAdded:Connect(function() local Ball = GetBall() if not Ball then return end ResetConnection() Connection = Ball:GetAttributeChangedSignal("target"):Connect(function() Parried = false end) end)  RunService.PreSimulation:Connect(function() local Ball, HRP = GetBall(), Player.Character.HumanoidRootPart if not Ball or not HRP then return end 
 local Speed = Ball.zoomies.VectorVelocity.Magnitude local Distance = (HRP.Position - Ball.Position).Magnitude 
 if Ball:GetAttribute("target") == Player.Name and not Parried and Distance / Speed <= 0.55 then VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0) Parried = true Cooldown = tick() 
 if (tick() - Cooldown) >= 1 then Partied = false end end end)
   end,
})

local MiscTab = Window:CreateTab("üé≠Misc", nil) -- Title, Image
local Section = MiscTab:CreateSection("Player")

local Button = MiscTab:CreateButton({
   Name = "Infƒ±nƒ±te Jump !HotKey Z!!",
   Callback = function()
   local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local Humanoid = Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid")
local InfiniteJumpEnabled = false
local JumpConnection

-- Function to enable infinite jump
local function EnableInfiniteJump()
    if JumpConnection then
        JumpConnection:Disconnect()
    end
    JumpConnection = UserInputService.JumpRequest:Connect(function()
        if Humanoid then
            Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
    InfiniteJumpEnabled = true
end

-- Function to disable infinite jump
local function DisableInfiniteJump()
    if JumpConnection then
        JumpConnection:Disconnect()
        JumpConnection = nil
    end
    InfiniteJumpEnabled = false
end

-- Toggle function to enable/disable infinite jump
local function ToggleInfiniteJump()
    if InfiniteJumpEnabled then
        DisableInfiniteJump()
    else
        EnableInfiniteJump()
    end
end

-- Connect the function to the player's character
Player.CharacterAdded:Connect(function(character)
    Humanoid = character:FindFirstChildWhichIsA("Humanoid") or character:WaitForChild("Humanoid")
    if InfiniteJumpEnabled then
        EnableInfiniteJump()
    end
end)

-- Enable infinite jump for the current character if already enabled
if Player.Character and InfiniteJumpEnabled then
    Humanoid = Player.Character:FindFirstChildWhichIsA("Humanoid") or Player.Character:WaitForChild("Humanoid")
    EnableInfiniteJump()
end

-- Example of how to toggle the script using a key press (Z key)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Z and not gameProcessed then
        ToggleInfiniteJump()
    end
end)
   end,
})

local Slider = MiscTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 300},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Button = MiscTab:CreateButton({
   Name = "Rejoin",
   Callback = function()
   local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

-- Function to rejoin the current game server
local function Rejoin()
    local playerId = Player.UserId
    local placeId = game.PlaceId
    local jobId = game.JobId

    -- Teleport the player to the same place instance (rejoin)
    TeleportService:TeleportToPlaceInstance(placeId, jobId, Player)
end

-- Execute the Rejoin function
Rejoin()
   end,
})

local VisualTab = Window:CreateTab("Visualüíé", 4483362458) -- Title, Image
local Section = VisualTab:CreateSection("VisualBeta")

local Button = VisualTab:CreateButton({
   Name = "VisualBeta",
   Callback = function()
   local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")

local Player = Players.LocalPlayer
local Cooldown = tick()
local IsParried = false
local Connection = nil
local ScriptEnabled = true  -- Scriptin √ßalƒ±≈üƒ±p √ßalƒ±≈ümadƒ±ƒüƒ±nƒ± kontrol eden deƒüi≈üken

local function GetBall()
    for _, Ball in ipairs(Workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            return Ball
        end
    end
end

local function ResetConnection()
    if Connection then
        Connection:Disconnect()
        Connection = nil
    end
end

local function CreateParryVisual()
    local character = Player.Character
    if not character then return end

    local visual = Instance.new("Part")
    visual.Name = "ParryVisual"
    visual.Size = Vector3.new(2, 2, 2)
    visual.Anchored = true
    visual.CanCollide = false
    visual.Material = Enum.Material.Neon
    visual.BrickColor = BrickColor.new("Lime green")
    visual.Transparency = 0.5
    visual.CFrame = character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
    visual.Parent = Workspace

    -- Animate the visual (e.g., scaling up and fading out)
    local tweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
    local goal = {Size = Vector3.new(4, 4, 4), Transparency = 1}
    local tween = tweenService:Create(visual, tweenInfo, goal)
    tween:Play()
    tween.Completed:Connect(function()
        visual:Destroy()
    end)
end

Workspace.Balls.ChildAdded:Connect(function()
    if not ScriptEnabled then return end  -- Script kapalƒ±ysa i≈üleme devam etme

    local Ball = GetBall()
    if not Ball then return end
    ResetConnection()
    Connection = Ball:GetAttributeChangedSignal("target"):Connect(function()
        IsParried = false
    end)
end)

RunService.PreSimulation:Connect(function()
    if not ScriptEnabled then return end  -- Script kapalƒ±ysa i≈üleme devam etme

    local Ball, HRP = GetBall(), Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Ball or not HRP then return end

    local Speed = Ball.AssemblyLinearVelocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude

    if Ball:GetAttribute("target") == Player.Name and not IsParried and Distance / Speed <= 0.55 then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        task.wait(0.1) -- Tƒ±klama s√ºresi 0.1 saniye
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        IsParried = true
        Cooldown = tick()
        CreateParryVisual()
    end

    if (tick() - Cooldown) >= 1 then
        IsParried = false
    end
end)

-- Scripti ba≈ülatmak ve durdurmak i√ßin kullanƒ±lacak fonksiyonlar
function EnableScript()
    ScriptEnabled = true
end

function DisableScript()
    ScriptEnabled = false
    ResetConnection()  -- Durdurulduƒüunda baƒülantƒ±yƒ± sƒ±fƒ±rla
end

-- Toggle fonksiyonunu mevcut GUI'nizdeki bir butona baƒülayabilirsiniz
function ToggleScript()
    if ScriptEnabled then
        DisableScript()
    else
        EnableScript()
    end
end

-- ToggleScript fonksiyonunu mevcut GUI'nizdeki toggle tu≈üuna baƒülayƒ±n
   end,
})
